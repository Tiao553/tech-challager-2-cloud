name: Developing

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  terraform:
    name: Terraform Pipeline
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.3

      # Step 3: Initialize Terraform
      - name: Terraform Init
        run: |
          terraform -chdir=infrastructure/aws init
          terraform -chdir=infrastructure/aws workspace select dev || terraform -chdir=infrastructure/aws workspace new dev

      # Step 4: Validate Terraform Code
      - name: Terraform Validate
        run: terraform -chdir=infrastructure/aws validate

      # Step 5: Format Terraform Code
      - name: Terraform Format
        run: terraform -chdir=infrastructure/aws fmt -check

      # Step 6: Terraform Plan
      - name: Terraform Plan
        run: terraform -chdir=infrastructure/aws plan -out=tfplan

      # Step 7: Terraform Apply (only on push)
      - name: Terraform Apply
        if: github.event_name == 'push'
        run: terraform -chdir=infrastructure/aws apply -auto-approve tfplan

  build_lambda:
    name: Build Lambda Functions
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      # Step 1: Checkout Repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Build Lambda Packages
      - name: Make build script executable
        run: chmod +x functions/build_lambda_zip.sh

      - name: Build and Zip Lambda Functions
        run: ./functions/build_lambda_zip.sh
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
